(* Generated by re2ocaml 4.0.2 *)
(* $ make generate-re2c *)
(* vim: set filetype=ocaml: *)

open Parser

let sprintf = Printf.sprintf

(* NOTE: re2c can request a character one position greater than the end of
   the string ("the sentinel"). In OCaml, strings are always represented with
   \000 at the end, so to avoid copying, we can use
   [String.unsafe_get str (String.length str)], which should in fact be safe.
   The [pos <= String.length str] check is not done here; it is assumed that
   re2c generates correct code. *)
let get = String.unsafe_get

let error msg = raise @@ Err.Custom_lexing_error msg

let malformed_utf8 () = error "Malformed UTF-8"

type 'a yyrecord = {
  info : 'a;
  yyinput : string;
  yylimit : int;
  mutable yystart : int;
  mutable yycursor : int;
  mutable yyaccept : int;
  mutable yymarker : int;
  
  mutable yytl0 : int;
  mutable yytr0 : int;
  
  mutable yyt1 : int;
}

type simple_yyrecord = unit yyrecord

let sub str l r = String.sub str l (r - l) [@@inline]

let group0 yyrecord = sub yyrecord.yyinput yyrecord.yytl0 yyrecord.yytr0
[@@inline]

(** Rollback to the start of an automaton *)
let rollback yyrecord = yyrecord.yycursor <- yyrecord.yystart [@@inline]

let make_yyrecord ?(offset = 0) ~info input = {
  info;
  yyinput = input;
  yylimit = String.length input;
  yycursor = offset;
  yystart = -1;
  yyaccept = 0;
  yymarker = 0;
  
  yytl0 = 0;
  yytr0 = 0;
  
  yyt1 = 0;
}

type tokenizer_state = {
  fname : string;
  mutable lnum : int;
  mutable bol : int;
  mutable start_cnum : int; (* token start, not necessarily automaton start *)
  mutable start_bol : int;
  mutable start_lnum : int;
  strbuf : Buffer.t;
}

type tokenizer_yyrecord = tokenizer_state yyrecord

let make_tokenizer_yyrecord ?(fname = "") input =
  make_yyrecord ~info:{
    fname;
    lnum = 1;
    bol = 0;
    start_cnum = 0;
    start_bol = 0;
    start_lnum = 1;
    strbuf = Buffer.create 32;
  } input

let newline yyrecord =
  yyrecord.info.lnum <- yyrecord.info.lnum + 1;
  yyrecord.info.bol <- yyrecord.yycursor

let save_position yyrecord =
  yyrecord.info.start_cnum <- yyrecord.yycursor;
  yyrecord.info.start_bol <- yyrecord.info.bol;
  yyrecord.info.start_lnum <- yyrecord.info.lnum

let make_lexing_start_pos yyrecord =
  Lexing.{
    pos_fname = yyrecord.info.fname;
    pos_lnum = yyrecord.info.start_lnum;
    pos_bol = yyrecord.info.start_bol;
    pos_cnum = yyrecord.info.start_cnum;
  }

let make_lexing_end_pos yyrecord =
  Lexing.{
    pos_fname = yyrecord.info.fname;
    pos_lnum = yyrecord.info.lnum;
    pos_bol = yyrecord.info.bol;
    pos_cnum = yyrecord.yycursor;
  }

let get_location yyrecord =
  make_lexing_start_pos yyrecord, make_lexing_end_pos yyrecord

let lexeme yyrecord =
  sub yyrecord.yyinput yyrecord.yystart yyrecord.yycursor

let add_lexeme_substring yyrecord strbuf =
  let len = yyrecord.yycursor - yyrecord.yystart in
  Buffer.add_substring strbuf yyrecord.yyinput yyrecord.yystart len

(* no unused variables *)
[@@@warning "-27"]



let resolve_unicode_escape yyrecord =
  let len = yyrecord.yytr0 - yyrecord.yytl0 in
  if len > 6 then
    error "Invalid unicode scalar value";
  let code_str = group0 yyrecord in
  let code = int_of_string ("0x" ^ code_str) in
  if not @@ Uchar.is_valid code then
    error "Invalid unicode scalar value";
  Uchar.unsafe_of_int code


let rec yy0 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'['
    | ']'..'\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy53 [@tailcall]) yyrecord strbuf
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy1 [@tailcall]) yyrecord strbuf
      )
    | '\\' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy3 [@tailcall]) yyrecord strbuf
    | '\xC2'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy6 [@tailcall]) yyrecord strbuf
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy7 [@tailcall]) yyrecord strbuf
    | '\xE1'..'\xEC'
    | '\xEE'..'\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy8 [@tailcall]) yyrecord strbuf
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy9 [@tailcall]) yyrecord strbuf
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy10 [@tailcall]) yyrecord strbuf
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy11 [@tailcall]) yyrecord strbuf
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy12 [@tailcall]) yyrecord strbuf
    | _ ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy4 [@tailcall]) yyrecord strbuf

and yy1 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  (yy2 [@tailcall]) yyrecord strbuf

and yy2 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  
    add_lexeme_substring yyrecord strbuf;
    resolve_escapes yyrecord strbuf


and yy3 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\b'
    | '\x0E'..'\x1F'
    | '!'
    | '#'..'['
    | ']'..'a'
    | 'c'..'e'
    | 'g'..'m'
    | 'o'..'q'
    | 'v'..'\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy2 [@tailcall]) yyrecord strbuf
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy13 [@tailcall]) yyrecord strbuf
      )
    | '\t'..'\r'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy15 [@tailcall]) yyrecord strbuf
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy17 [@tailcall]) yyrecord strbuf
    | '\\' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy18 [@tailcall]) yyrecord strbuf
    | 'b' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy19 [@tailcall]) yyrecord strbuf
    | 'f' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy20 [@tailcall]) yyrecord strbuf
    | 'n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy21 [@tailcall]) yyrecord strbuf
    | 'r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy22 [@tailcall]) yyrecord strbuf
    | 's' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy23 [@tailcall]) yyrecord strbuf
    | 't' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy24 [@tailcall]) yyrecord strbuf
    | 'u' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy25 [@tailcall]) yyrecord strbuf
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy26 [@tailcall]) yyrecord strbuf
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy28 [@tailcall]) yyrecord strbuf
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy29 [@tailcall]) yyrecord strbuf
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy30 [@tailcall]) yyrecord strbuf
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy31 [@tailcall]) yyrecord strbuf
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy32 [@tailcall]) yyrecord strbuf
    | '\xE4'..'\xEC'
    | '\xEE'..'\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy33 [@tailcall]) yyrecord strbuf
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy34 [@tailcall]) yyrecord strbuf
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy35 [@tailcall]) yyrecord strbuf
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy36 [@tailcall]) yyrecord strbuf
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy37 [@tailcall]) yyrecord strbuf
    | _ -> (yy2 [@tailcall]) yyrecord strbuf

and yy4 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  (yy5 [@tailcall]) yyrecord strbuf

and yy5 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  malformed_utf8 ()

and yy6 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy1 [@tailcall]) yyrecord strbuf
    | _ -> (yy5 [@tailcall]) yyrecord strbuf

and yy7 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy38 [@tailcall]) yyrecord strbuf
    | _ -> (yy5 [@tailcall]) yyrecord strbuf

and yy8 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy38 [@tailcall]) yyrecord strbuf
    | _ -> (yy5 [@tailcall]) yyrecord strbuf

and yy9 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy38 [@tailcall]) yyrecord strbuf
    | _ -> (yy5 [@tailcall]) yyrecord strbuf

and yy10 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy39 [@tailcall]) yyrecord strbuf
    | _ -> (yy5 [@tailcall]) yyrecord strbuf

and yy11 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy39 [@tailcall]) yyrecord strbuf
    | _ -> (yy5 [@tailcall]) yyrecord strbuf

and yy12 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy39 [@tailcall]) yyrecord strbuf
    | _ -> (yy5 [@tailcall]) yyrecord strbuf

and yy13 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  (yy14 [@tailcall]) yyrecord strbuf

and yy14 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  error "Invalid escape sequence"

and yy15 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yyaccept <- 2;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'..'\r'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy15 [@tailcall]) yyrecord strbuf
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy40 [@tailcall]) yyrecord strbuf
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy41 [@tailcall]) yyrecord strbuf
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy42 [@tailcall]) yyrecord strbuf
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy43 [@tailcall]) yyrecord strbuf
    | _ -> (yy16 [@tailcall]) yyrecord strbuf

and yy16 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  resolve_escapes yyrecord strbuf

and yy17 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_char strbuf '"'; resolve_escapes yyrecord strbuf

and yy18 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_char strbuf '\\'; resolve_escapes yyrecord strbuf

and yy19 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_char strbuf '\b'; resolve_escapes yyrecord strbuf

and yy20 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_char strbuf '\012'; resolve_escapes yyrecord strbuf

and yy21 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_char strbuf '\n'; resolve_escapes yyrecord strbuf

and yy22 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_char strbuf '\r'; resolve_escapes yyrecord strbuf

and yy23 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_char strbuf ' '; resolve_escapes yyrecord strbuf

and yy24 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_char strbuf '\t'; resolve_escapes yyrecord strbuf

and yy25 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yyaccept <- 3;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '{' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy44 [@tailcall]) yyrecord strbuf
    | _ -> (yy14 [@tailcall]) yyrecord strbuf

and yy26 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\x9F'
    | '\xA1'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy13 [@tailcall]) yyrecord strbuf
    | '\x85'
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy15 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy27 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yycursor <- yyrecord.yymarker;
  match yyrecord.yyaccept with
    | 0 -> (yy2 [@tailcall]) yyrecord strbuf
    | 1 -> (yy5 [@tailcall]) yyrecord strbuf
    | 2 -> (yy16 [@tailcall]) yyrecord strbuf
    | _ -> (yy14 [@tailcall]) yyrecord strbuf

and yy28 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy13 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy29 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy28 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy30 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x99'
    | '\x9B'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy28 [@tailcall]) yyrecord strbuf
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy45 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy31 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy46 [@tailcall]) yyrecord strbuf
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy47 [@tailcall]) yyrecord strbuf
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy28 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy32 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy45 [@tailcall]) yyrecord strbuf
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy28 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy33 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy28 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy34 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy28 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy35 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy33 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy36 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy33 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy37 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy33 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy38 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy1 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy39 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy38 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy40 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x85'
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy15 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy41 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy48 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy42 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy49 [@tailcall]) yyrecord strbuf
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy50 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy43 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy48 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy44 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '0'..'9'
    | 'A'..'F'
    | 'a'..'f' ->
      yyrecord.yyt1 <- yyrecord.yycursor;
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy51 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy45 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy15 [@tailcall]) yyrecord strbuf
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy13 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy46 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xA8'..'\xA9'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy15 [@tailcall]) yyrecord strbuf
    | '\x8B'..'\xA7'
    | '\xAA'..'\xAE'
    | '\xB0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy13 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy47 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9E'
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy13 [@tailcall]) yyrecord strbuf
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy15 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy48 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy15 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy49 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xA8'..'\xA9'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy15 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy50 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy15 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy51 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '0'..'9'
    | 'A'..'F'
    | 'a'..'f' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy51 [@tailcall]) yyrecord strbuf
    | '}' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy52 [@tailcall]) yyrecord strbuf
    | _ -> (yy27 [@tailcall]) yyrecord strbuf

and yy52 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yytl0 <- yyrecord.yyt1;
  yyrecord.yytr0 <- yyrecord.yycursor;
  yyrecord.yytr0 <- yyrecord.yytr0 - 1;
  
    let uchar = resolve_unicode_escape yyrecord in
    Buffer.add_utf_8_uchar strbuf uchar;
    resolve_escapes yyrecord strbuf


and yy53 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.contents strbuf

and resolve_escapes_body (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  (yy0 [@tailcall]) yyrecord strbuf



and resolve_escapes yyrecord strbuf =
  yyrecord.yystart <- yyrecord.yycursor;
  resolve_escapes_body yyrecord strbuf


let rec yy54 (yyrecord : simple_yyrecord) : int =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy57 [@tailcall]) yyrecord
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy59 [@tailcall]) yyrecord
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy61 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy62 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy63 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy64 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy65 [@tailcall]) yyrecord
    | _ ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy75 [@tailcall]) yyrecord
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy55 [@tailcall]) yyrecord
      )

and yy55 (yyrecord : simple_yyrecord) : int =
  (yy56 [@tailcall]) yyrecord

and yy56 (yyrecord : simple_yyrecord) : int =
  ~-1

and yy57 (yyrecord : simple_yyrecord) : int =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy57 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy66 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy68 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy69 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy70 [@tailcall]) yyrecord
    | _ -> (yy58 [@tailcall]) yyrecord

and yy58 (yyrecord : simple_yyrecord) : int =
  skip_whitespace_line yyrecord

and yy59 (yyrecord : simple_yyrecord) : int =
  (yy60 [@tailcall]) yyrecord

and yy60 (yyrecord : simple_yyrecord) : int =
  yyrecord.yycursor

and yy61 (yyrecord : simple_yyrecord) : int =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy59 [@tailcall]) yyrecord
    | _ -> (yy60 [@tailcall]) yyrecord

and yy62 (yyrecord : simple_yyrecord) : int =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy59 [@tailcall]) yyrecord
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy57 [@tailcall]) yyrecord
    | _ -> (yy56 [@tailcall]) yyrecord

and yy63 (yyrecord : simple_yyrecord) : int =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy71 [@tailcall]) yyrecord
    | _ -> (yy56 [@tailcall]) yyrecord

and yy64 (yyrecord : simple_yyrecord) : int =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy72 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy73 [@tailcall]) yyrecord
    | _ -> (yy56 [@tailcall]) yyrecord

and yy65 (yyrecord : simple_yyrecord) : int =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy71 [@tailcall]) yyrecord
    | _ -> (yy56 [@tailcall]) yyrecord

and yy66 (yyrecord : simple_yyrecord) : int =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy57 [@tailcall]) yyrecord
    | _ -> (yy67 [@tailcall]) yyrecord

and yy67 (yyrecord : simple_yyrecord) : int =
  yyrecord.yycursor <- yyrecord.yymarker;
  if (yyrecord.yyaccept == 0) then (yy58 [@tailcall]) yyrecord
  else (yy56 [@tailcall]) yyrecord

and yy68 (yyrecord : simple_yyrecord) : int =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy71 [@tailcall]) yyrecord
    | _ -> (yy67 [@tailcall]) yyrecord

and yy69 (yyrecord : simple_yyrecord) : int =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy74 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy73 [@tailcall]) yyrecord
    | _ -> (yy67 [@tailcall]) yyrecord

and yy70 (yyrecord : simple_yyrecord) : int =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy71 [@tailcall]) yyrecord
    | _ -> (yy67 [@tailcall]) yyrecord

and yy71 (yyrecord : simple_yyrecord) : int =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy57 [@tailcall]) yyrecord
    | _ -> (yy67 [@tailcall]) yyrecord

and yy72 (yyrecord : simple_yyrecord) : int =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy57 [@tailcall]) yyrecord
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy59 [@tailcall]) yyrecord
    | _ -> (yy67 [@tailcall]) yyrecord

and yy73 (yyrecord : simple_yyrecord) : int =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy57 [@tailcall]) yyrecord
    | _ -> (yy67 [@tailcall]) yyrecord

and yy74 (yyrecord : simple_yyrecord) : int =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy57 [@tailcall]) yyrecord
    | _ -> (yy67 [@tailcall]) yyrecord

and yy75 (yyrecord : simple_yyrecord) : int =
  yyrecord.yycursor

and skip_whitespace_line (yyrecord : simple_yyrecord) : int =
  (yy54 [@tailcall]) yyrecord




let rec yy76 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy79 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy81 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy82 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy83 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy84 [@tailcall]) yyrecord
    | _ ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy93 [@tailcall]) yyrecord
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy77 [@tailcall]) yyrecord
      )

and yy77 (yyrecord : simple_yyrecord) : bool =
  (yy78 [@tailcall]) yyrecord

and yy78 (yyrecord : simple_yyrecord) : bool =
  false

and yy79 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy79 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy85 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy87 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy88 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy89 [@tailcall]) yyrecord
    | _ -> (yy80 [@tailcall]) yyrecord

and yy80 (yyrecord : simple_yyrecord) : bool =
  is_fully_whitespace yyrecord

and yy81 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy79 [@tailcall]) yyrecord
    | _ -> (yy78 [@tailcall]) yyrecord

and yy82 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy90 [@tailcall]) yyrecord
    | _ -> (yy78 [@tailcall]) yyrecord

and yy83 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy91 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy92 [@tailcall]) yyrecord
    | _ -> (yy78 [@tailcall]) yyrecord

and yy84 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy90 [@tailcall]) yyrecord
    | _ -> (yy78 [@tailcall]) yyrecord

and yy85 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy79 [@tailcall]) yyrecord
    | _ -> (yy86 [@tailcall]) yyrecord

and yy86 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yycursor <- yyrecord.yymarker;
  if (yyrecord.yyaccept == 0) then (yy80 [@tailcall]) yyrecord
  else (yy78 [@tailcall]) yyrecord

and yy87 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy90 [@tailcall]) yyrecord
    | _ -> (yy86 [@tailcall]) yyrecord

and yy88 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy91 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy92 [@tailcall]) yyrecord
    | _ -> (yy86 [@tailcall]) yyrecord

and yy89 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy90 [@tailcall]) yyrecord
    | _ -> (yy86 [@tailcall]) yyrecord

and yy90 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy79 [@tailcall]) yyrecord
    | _ -> (yy86 [@tailcall]) yyrecord

and yy91 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy79 [@tailcall]) yyrecord
    | _ -> (yy86 [@tailcall]) yyrecord

and yy92 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy79 [@tailcall]) yyrecord
    | _ -> (yy86 [@tailcall]) yyrecord

and yy93 (yyrecord : simple_yyrecord) : bool =
  true

and is_fully_whitespace (yyrecord : simple_yyrecord) : bool =
  (yy76 [@tailcall]) yyrecord




let rec yy94 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'
    | ','
    | ':'
    | '<'
    | '>'..'Z'
    | '^'..'e'
    | 'g'..'h'
    | 'j'..'m'
    | 'o'..'s'
    | 'u'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy97 [@tailcall]) yyrecord
    | '+' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy100 [@tailcall]) yyrecord
    | '-' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy101 [@tailcall]) yyrecord
    | '.' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy102 [@tailcall]) yyrecord
    | 'f' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy103 [@tailcall]) yyrecord
    | 'i' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy104 [@tailcall]) yyrecord
    | 'n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy105 [@tailcall]) yyrecord
    | 't' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy106 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy107 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy108 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy109 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy110 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy111 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy112 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy113 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy114 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy115 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy116 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy117 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy118 [@tailcall]) yyrecord
    | _ ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy148 [@tailcall]) yyrecord
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy95 [@tailcall]) yyrecord
      )

and yy95 (yyrecord : simple_yyrecord) : bool =
  (yy96 [@tailcall]) yyrecord

and yy96 (yyrecord : simple_yyrecord) : bool =
  false

and yy97 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  (yy98 [@tailcall]) yyrecord yych

and yy98 (yyrecord : simple_yyrecord) (yych : char) : bool =
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | '0'..':'
    | '<'
    | '>'..'Z'
    | '^'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy97 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy119 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy122 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy123 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy124 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy125 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy126 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy127 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy128 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy129 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy130 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy131 [@tailcall]) yyrecord
    | _ -> (yy99 [@tailcall]) yyrecord

and yy99 (yyrecord : simple_yyrecord) : bool =
  
    yyrecord.yycursor >= yyrecord.yylimit


and yy100 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '0'..'9' -> (yy99 [@tailcall]) yyrecord
    | '.' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy102 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy101 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '0'..'9' -> (yy99 [@tailcall]) yyrecord
    | '.' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy102 [@tailcall]) yyrecord
    | 'i' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy104 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy102 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | '0'..'9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy132 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy103 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 'a' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy134 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy104 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 'n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy135 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy105 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 'a' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy136 [@tailcall]) yyrecord
    | 'u' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy137 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy106 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 'r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy138 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy107 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\x9F'
    | '\xA1'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy97 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy108 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy97 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy109 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy110 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x99'
    | '\x9B'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy139 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy111 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy140 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy141 [@tailcall]) yyrecord
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy112 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy139 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy113 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy114 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy115 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy142 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy116 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy126 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy117 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy126 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy118 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy126 [@tailcall]) yyrecord
    | _ -> (yy96 [@tailcall]) yyrecord

and yy119 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\x9F'
    | '\xA1'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy97 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy120 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yycursor <- yyrecord.yymarker;
  match yyrecord.yyaccept with
    | 0 -> (yy99 [@tailcall]) yyrecord
    | 1 -> (yy96 [@tailcall]) yyrecord
    | 2 -> (yy133 [@tailcall]) yyrecord
    | _ -> (yy145 [@tailcall]) yyrecord

and yy121 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy97 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy122 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy123 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x99'
    | '\x9B'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy139 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy124 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy140 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy141 [@tailcall]) yyrecord
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy125 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy139 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy126 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy127 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy128 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy121 [@tailcall]) yyrecord
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy142 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy129 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy126 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy130 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy126 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy131 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy126 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy132 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 2;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | '0'..':'
    | '<'
    | '>'..'Z'
    | '^'..'z'
    | '|'
    | '~'
    | '\xC2'..'\xF4' -> (yy98 [@tailcall]) yyrecord yych
    | _ -> (yy133 [@tailcall]) yyrecord

and yy133 (yyrecord : simple_yyrecord) : bool =
  false

and yy134 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 'l' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy143 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy135 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 'f' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy144 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy136 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 'n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy144 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy137 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 'l' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy146 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy138 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 'u' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy147 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy139 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy97 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy140 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x8B'..'\x8D'
    | '\x90'..'\xA7'
    | '\xB0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy97 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy141 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9E'
    | '\xA0'..'\xA5'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy97 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy142 (yyrecord : simple_yyrecord) : bool =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy97 [@tailcall]) yyrecord
    | _ -> (yy120 [@tailcall]) yyrecord

and yy143 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 's' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy147 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy144 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 3;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | '0'..':'
    | '<'
    | '>'..'Z'
    | '^'..'z'
    | '|'
    | '~'
    | '\xC2'..'\xF4' -> (yy98 [@tailcall]) yyrecord yych
    | _ -> (yy145 [@tailcall]) yyrecord

and yy145 (yyrecord : simple_yyrecord) : bool =
  
    not (yyrecord.yycursor >= yyrecord.yylimit)


and yy146 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 'l' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy144 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy147 (yyrecord : simple_yyrecord) : bool =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy99 [@tailcall]) yyrecord
    | 'e' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy144 [@tailcall]) yyrecord
    | _ -> (yy98 [@tailcall]) yyrecord yych

and yy148 (yyrecord : simple_yyrecord) : bool =
  false

and is_valid_ident (yyrecord : simple_yyrecord) : bool =
  (yy94 [@tailcall]) yyrecord




let rec yy149 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\x07'
    | '\x0E'..'\x1F'
    | '\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy176 [@tailcall]) yyrecord strbuf
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy150 [@tailcall]) yyrecord strbuf
      )
    | '\b' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy151 [@tailcall]) yyrecord strbuf
    | '\t' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy152 [@tailcall]) yyrecord strbuf
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy153 [@tailcall]) yyrecord strbuf
    | '\x0B'
    | ' '..'!'
    | '#'..'['
    | ']'..'~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy154 [@tailcall]) yyrecord strbuf
    | '\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy155 [@tailcall]) yyrecord strbuf
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy156 [@tailcall]) yyrecord strbuf
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy157 [@tailcall]) yyrecord strbuf
    | '\\' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy158 [@tailcall]) yyrecord strbuf
    | '\xC2'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy161 [@tailcall]) yyrecord strbuf
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy162 [@tailcall]) yyrecord strbuf
    | '\xE1'
    | '\xE3'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy163 [@tailcall]) yyrecord strbuf
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy164 [@tailcall]) yyrecord strbuf
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy165 [@tailcall]) yyrecord strbuf
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy166 [@tailcall]) yyrecord strbuf
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy167 [@tailcall]) yyrecord strbuf
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy168 [@tailcall]) yyrecord strbuf
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy169 [@tailcall]) yyrecord strbuf
    | _ ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy159 [@tailcall]) yyrecord strbuf

and yy150 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  
    let udecode = String.get_utf_8_uchar yyrecord.yyinput yyrecord.yystart in
    if not (Uchar.utf_decode_is_valid udecode) then
      failwith "Malformed UTF-8";
    let code = Uchar.to_int (Uchar.utf_decode_uchar udecode) in
    Buffer.add_string strbuf (Printf.sprintf "\\u{%X}" code);
    escape_string yyrecord strbuf


and yy151 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_string strbuf "\\b"; escape_string yyrecord strbuf

and yy152 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_string strbuf "\\t"; escape_string yyrecord strbuf

and yy153 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_string strbuf "\\n"; escape_string yyrecord strbuf

and yy154 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  
    add_lexeme_substring yyrecord strbuf;
    escape_string yyrecord strbuf


and yy155 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_string strbuf "\\f"; escape_string yyrecord strbuf

and yy156 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_string strbuf "\\r"; escape_string yyrecord strbuf

and yy157 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_string strbuf "\\\""; escape_string yyrecord strbuf

and yy158 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.add_string strbuf "\\\\"; escape_string yyrecord strbuf

and yy159 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  (yy160 [@tailcall]) yyrecord strbuf

and yy160 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  malformed_utf8 ()

and yy161 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy154 [@tailcall]) yyrecord strbuf
    | _ -> (yy160 [@tailcall]) yyrecord strbuf

and yy162 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy170 [@tailcall]) yyrecord strbuf
    | _ -> (yy160 [@tailcall]) yyrecord strbuf

and yy163 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy170 [@tailcall]) yyrecord strbuf
    | _ -> (yy160 [@tailcall]) yyrecord strbuf

and yy164 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy172 [@tailcall]) yyrecord strbuf
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy173 [@tailcall]) yyrecord strbuf
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy170 [@tailcall]) yyrecord strbuf
    | _ -> (yy160 [@tailcall]) yyrecord strbuf

and yy165 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy170 [@tailcall]) yyrecord strbuf
    | _ -> (yy160 [@tailcall]) yyrecord strbuf

and yy166 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy170 [@tailcall]) yyrecord strbuf
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy174 [@tailcall]) yyrecord strbuf
    | _ -> (yy160 [@tailcall]) yyrecord strbuf

and yy167 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy175 [@tailcall]) yyrecord strbuf
    | _ -> (yy160 [@tailcall]) yyrecord strbuf

and yy168 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy175 [@tailcall]) yyrecord strbuf
    | _ -> (yy160 [@tailcall]) yyrecord strbuf

and yy169 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy175 [@tailcall]) yyrecord strbuf
    | _ -> (yy160 [@tailcall]) yyrecord strbuf

and yy170 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy154 [@tailcall]) yyrecord strbuf
    | _ -> (yy171 [@tailcall]) yyrecord strbuf

and yy171 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  yyrecord.yycursor <- yyrecord.yymarker;
  (yy160 [@tailcall]) yyrecord strbuf

and yy172 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8D'
    | '\x90'..'\xA9'
    | '\xAF'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy154 [@tailcall]) yyrecord strbuf
    | '\x8E'..'\x8F'
    | '\xAA'..'\xAE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy150 [@tailcall]) yyrecord strbuf
    | _ -> (yy171 [@tailcall]) yyrecord strbuf

and yy173 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xA5'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy154 [@tailcall]) yyrecord strbuf
    | '\xA6'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy150 [@tailcall]) yyrecord strbuf
    | _ -> (yy171 [@tailcall]) yyrecord strbuf

and yy174 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy154 [@tailcall]) yyrecord strbuf
    | '\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy150 [@tailcall]) yyrecord strbuf
    | _ -> (yy171 [@tailcall]) yyrecord strbuf

and yy175 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy170 [@tailcall]) yyrecord strbuf
    | _ -> (yy171 [@tailcall]) yyrecord strbuf

and yy176 (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  Buffer.contents strbuf

and escape_string_body (yyrecord : simple_yyrecord) (strbuf : Buffer.t) : string =
  (yy149 [@tailcall]) yyrecord strbuf



and escape_string yyrecord strbuf =
  yyrecord.yystart <- yyrecord.yycursor;
  escape_string_body yyrecord strbuf

let resolve_escapes str =
  resolve_escapes (make_yyrecord ~info:() str) (Buffer.create 32)

let skip_whitespace_line ?(offset = 0) str =
  skip_whitespace_line (make_yyrecord ~offset ~info:() str)

let is_fully_whitespace = function
  | "" -> true
  | str -> is_fully_whitespace (make_yyrecord ~info:() str)

let is_valid_ident str = is_valid_ident (make_yyrecord ~info:() str)
[@@inline]

let escape_string = function
  | "" as empty -> empty
  | str -> escape_string (make_yyrecord ~info:() str) (Buffer.create 32)

let[@inline] check_hashlen ~exp (got : int) =
  if got > exp then
    error (sprintf "Expected %d hash symbol(s), got %d" exp got)
  else got = exp

let dedent str =
  let strlen = String.length str in
  if strlen < 1 || str.[0] <> '\n' then
    error "A multiline string must start with newline";
  let prefix =
    let prefix_start = String.rindex str '\n' + 1 in
    String.sub str prefix_start (strlen - prefix_start)
  in
  let prefix_len = String.length prefix in
  if not (is_fully_whitespace prefix) then
    error "Invalid multiline string: non-whitespace prefix";
  let result = Buffer.create 32 in
  (* Skip the first newline *)
  let i = ref 1 in
  let line_start = ref 1 in
  (* Exclude prefix and the last newline *)
  let limit = strlen - prefix_len - 1 in
  while !i < limit do
    let ch = String.unsafe_get str !i in
    let line_i = !i - !line_start in
    let old_i = !i in
    if line_i = 0 then begin
      (* If the line fully consists of any whitespace, we skip the contents
         of it without prefix checks *)
      let next_line_start = skip_whitespace_line ~offset:!i str in
      (* -1 if the line contains content *)
      if next_line_start >= 0 then begin
        i := next_line_start;
        line_start := next_line_start;
        if next_line_start - 1 < limit then
          Buffer.add_char result '\n'
      end
    end;
    if !i = old_i then begin
      if line_i < prefix_len then begin
        (* Validating whitespace prefix *)
        if ch <> String.unsafe_get prefix line_i then
          error "Invalid multiline string: unmatched whitespace prefix"
      end else begin
        Buffer.add_char result ch;
        if ch = '\n' then
          line_start := !i + 1;
      end;
      incr i
    end;
  done;
  Buffer.contents result


let rec yy177 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\t'
    | '\x0E'..')'
    | '+'..'.'
    | '0'..'\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy202 [@tailcall]) yyrecord depth
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy178 [@tailcall]) yyrecord depth
      )
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy180 [@tailcall]) yyrecord depth
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy182 [@tailcall]) yyrecord depth
    | '*' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy183 [@tailcall]) yyrecord depth
    | '/' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy184 [@tailcall]) yyrecord depth
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy187 [@tailcall]) yyrecord depth
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy188 [@tailcall]) yyrecord depth
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy189 [@tailcall]) yyrecord depth
    | '\xE1'
    | '\xE3'..'\xEC'
    | '\xEE'..'\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy190 [@tailcall]) yyrecord depth
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy191 [@tailcall]) yyrecord depth
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy192 [@tailcall]) yyrecord depth
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy193 [@tailcall]) yyrecord depth
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy194 [@tailcall]) yyrecord depth
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy195 [@tailcall]) yyrecord depth
    | _ ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy185 [@tailcall]) yyrecord depth

and yy178 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  (yy179 [@tailcall]) yyrecord depth

and yy179 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  multiline_comment yyrecord depth

and yy180 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  (yy181 [@tailcall]) yyrecord depth

and yy181 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  newline yyrecord; multiline_comment yyrecord depth

and yy182 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy180 [@tailcall]) yyrecord depth
    | _ -> (yy181 [@tailcall]) yyrecord depth

and yy183 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '/' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy196 [@tailcall]) yyrecord depth
    | _ -> (yy179 [@tailcall]) yyrecord depth

and yy184 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '*' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy197 [@tailcall]) yyrecord depth
    | _ -> (yy179 [@tailcall]) yyrecord depth

and yy185 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  (yy186 [@tailcall]) yyrecord depth

and yy186 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  malformed_utf8 ()

and yy187 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy178 [@tailcall]) yyrecord depth
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy180 [@tailcall]) yyrecord depth
    | _ -> (yy186 [@tailcall]) yyrecord depth

and yy188 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy178 [@tailcall]) yyrecord depth
    | _ -> (yy186 [@tailcall]) yyrecord depth

and yy189 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy198 [@tailcall]) yyrecord depth
    | _ -> (yy186 [@tailcall]) yyrecord depth

and yy190 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy198 [@tailcall]) yyrecord depth
    | _ -> (yy186 [@tailcall]) yyrecord depth

and yy191 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy200 [@tailcall]) yyrecord depth
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy198 [@tailcall]) yyrecord depth
    | _ -> (yy186 [@tailcall]) yyrecord depth

and yy192 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy198 [@tailcall]) yyrecord depth
    | _ -> (yy186 [@tailcall]) yyrecord depth

and yy193 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy201 [@tailcall]) yyrecord depth
    | _ -> (yy186 [@tailcall]) yyrecord depth

and yy194 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy201 [@tailcall]) yyrecord depth
    | _ -> (yy186 [@tailcall]) yyrecord depth

and yy195 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy201 [@tailcall]) yyrecord depth
    | _ -> (yy186 [@tailcall]) yyrecord depth

and yy196 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  if depth <= 0 then () else multiline_comment yyrecord (depth - 1)

and yy197 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  multiline_comment yyrecord (depth + 1)

and yy198 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy178 [@tailcall]) yyrecord depth
    | _ -> (yy199 [@tailcall]) yyrecord depth

and yy199 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  yyrecord.yycursor <- yyrecord.yymarker;
  (yy186 [@tailcall]) yyrecord depth

and yy200 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xA7'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy178 [@tailcall]) yyrecord depth
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy180 [@tailcall]) yyrecord depth
    | _ -> (yy199 [@tailcall]) yyrecord depth

and yy201 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy198 [@tailcall]) yyrecord depth
    | _ -> (yy199 [@tailcall]) yyrecord depth

and yy202 (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  error "Unterminated comment"

and multiline_comment (yyrecord : tokenizer_yyrecord) (depth : int) : unit =
  (yy177 [@tailcall]) yyrecord depth




let rec yy203 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\t'
    | '\x0E'..'\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy232 [@tailcall]) yyrecord
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy204 [@tailcall]) yyrecord
      )
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy206 [@tailcall]) yyrecord
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy208 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy211 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy212 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy213 [@tailcall]) yyrecord
    | '\xE1'
    | '\xE3'..'\xEC'
    | '\xEE'..'\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy214 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy215 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy216 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy217 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy218 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy219 [@tailcall]) yyrecord
    | _ ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy209 [@tailcall]) yyrecord

and yy204 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\t'
    | '\x0E'..'\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy205 [@tailcall]) yyrecord
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy204 [@tailcall]) yyrecord
      )
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy220 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy222 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy223 [@tailcall]) yyrecord
    | '\xE1'
    | '\xE3'..'\xEC'
    | '\xEE'..'\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy224 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy225 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy226 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy227 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy228 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy229 [@tailcall]) yyrecord
    | _ -> (yy205 [@tailcall]) yyrecord

and yy205 (yyrecord : tokenizer_yyrecord) : unit =
  singleline_comment yyrecord

and yy206 (yyrecord : tokenizer_yyrecord) : unit =
  (yy207 [@tailcall]) yyrecord

and yy207 (yyrecord : tokenizer_yyrecord) : unit =
  newline yyrecord

and yy208 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy206 [@tailcall]) yyrecord
    | _ -> (yy207 [@tailcall]) yyrecord

and yy209 (yyrecord : tokenizer_yyrecord) : unit =
  (yy210 [@tailcall]) yyrecord

and yy210 (yyrecord : tokenizer_yyrecord) : unit =
  malformed_utf8 ()

and yy211 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy204 [@tailcall]) yyrecord
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy206 [@tailcall]) yyrecord
    | _ -> (yy210 [@tailcall]) yyrecord

and yy212 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy204 [@tailcall]) yyrecord
    | _ -> (yy210 [@tailcall]) yyrecord

and yy213 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy222 [@tailcall]) yyrecord
    | _ -> (yy210 [@tailcall]) yyrecord

and yy214 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy222 [@tailcall]) yyrecord
    | _ -> (yy210 [@tailcall]) yyrecord

and yy215 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy230 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy222 [@tailcall]) yyrecord
    | _ -> (yy210 [@tailcall]) yyrecord

and yy216 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy222 [@tailcall]) yyrecord
    | _ -> (yy210 [@tailcall]) yyrecord

and yy217 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy224 [@tailcall]) yyrecord
    | _ -> (yy210 [@tailcall]) yyrecord

and yy218 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy224 [@tailcall]) yyrecord
    | _ -> (yy210 [@tailcall]) yyrecord

and yy219 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy224 [@tailcall]) yyrecord
    | _ -> (yy210 [@tailcall]) yyrecord

and yy220 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy204 [@tailcall]) yyrecord
    | _ -> (yy221 [@tailcall]) yyrecord

and yy221 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yycursor <- yyrecord.yymarker;
  if (yyrecord.yyaccept == 0) then (yy205 [@tailcall]) yyrecord
  else (yy210 [@tailcall]) yyrecord

and yy222 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy204 [@tailcall]) yyrecord
    | _ -> (yy221 [@tailcall]) yyrecord

and yy223 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy222 [@tailcall]) yyrecord
    | _ -> (yy221 [@tailcall]) yyrecord

and yy224 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy222 [@tailcall]) yyrecord
    | _ -> (yy221 [@tailcall]) yyrecord

and yy225 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy231 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy222 [@tailcall]) yyrecord
    | _ -> (yy221 [@tailcall]) yyrecord

and yy226 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy222 [@tailcall]) yyrecord
    | _ -> (yy221 [@tailcall]) yyrecord

and yy227 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy224 [@tailcall]) yyrecord
    | _ -> (yy221 [@tailcall]) yyrecord

and yy228 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy224 [@tailcall]) yyrecord
    | _ -> (yy221 [@tailcall]) yyrecord

and yy229 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy224 [@tailcall]) yyrecord
    | _ -> (yy221 [@tailcall]) yyrecord

and yy230 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xA7'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy204 [@tailcall]) yyrecord
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy206 [@tailcall]) yyrecord
    | _ -> (yy221 [@tailcall]) yyrecord

and yy231 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xA7'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy204 [@tailcall]) yyrecord
    | _ -> (yy221 [@tailcall]) yyrecord

and yy232 (yyrecord : tokenizer_yyrecord) : unit =
  ()

and singleline_comment (yyrecord : tokenizer_yyrecord) : unit =
  (yy203 [@tailcall]) yyrecord




let rec yy233 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\b'
    | '\x0E'..'\x1F'
    | '!'..'.'
    | '0'..'\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy270 [@tailcall]) yyrecord
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy234 [@tailcall]) yyrecord
      )
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy236 [@tailcall]) yyrecord
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy238 [@tailcall]) yyrecord
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy240 [@tailcall]) yyrecord
    | '/' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy241 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy244 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy245 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy246 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy247 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy248 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy249 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE'..'\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy250 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy251 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy252 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy253 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy254 [@tailcall]) yyrecord
    | _ ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy242 [@tailcall]) yyrecord

and yy234 (yyrecord : tokenizer_yyrecord) : unit =
  (yy235 [@tailcall]) yyrecord

and yy235 (yyrecord : tokenizer_yyrecord) : unit =
  
    error @@ sprintf "Illegal character '%s' after the '\\' line continuation"
      (lexeme yyrecord)


and yy236 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy236 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy255 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy257 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy258 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy259 [@tailcall]) yyrecord
    | _ -> (yy237 [@tailcall]) yyrecord

and yy237 (yyrecord : tokenizer_yyrecord) : unit =
  line_cont yyrecord

and yy238 (yyrecord : tokenizer_yyrecord) : unit =
  (yy239 [@tailcall]) yyrecord

and yy239 (yyrecord : tokenizer_yyrecord) : unit =
  newline yyrecord

and yy240 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy238 [@tailcall]) yyrecord
    | _ -> (yy239 [@tailcall]) yyrecord

and yy241 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '*' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy260 [@tailcall]) yyrecord
    | '/' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy261 [@tailcall]) yyrecord
    | _ -> (yy235 [@tailcall]) yyrecord

and yy242 (yyrecord : tokenizer_yyrecord) : unit =
  (yy243 [@tailcall]) yyrecord

and yy243 (yyrecord : tokenizer_yyrecord) : unit =
  malformed_utf8 ()

and yy244 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\x9F'
    | '\xA1'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy234 [@tailcall]) yyrecord
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy238 [@tailcall]) yyrecord
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy236 [@tailcall]) yyrecord
    | _ -> (yy243 [@tailcall]) yyrecord

and yy245 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy234 [@tailcall]) yyrecord
    | _ -> (yy243 [@tailcall]) yyrecord

and yy246 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy262 [@tailcall]) yyrecord
    | _ -> (yy243 [@tailcall]) yyrecord

and yy247 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x99'
    | '\x9B'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy262 [@tailcall]) yyrecord
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy263 [@tailcall]) yyrecord
    | _ -> (yy243 [@tailcall]) yyrecord

and yy248 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy264 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy265 [@tailcall]) yyrecord
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy262 [@tailcall]) yyrecord
    | _ -> (yy243 [@tailcall]) yyrecord

and yy249 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy263 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy262 [@tailcall]) yyrecord
    | _ -> (yy243 [@tailcall]) yyrecord

and yy250 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy262 [@tailcall]) yyrecord
    | _ -> (yy243 [@tailcall]) yyrecord

and yy251 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy262 [@tailcall]) yyrecord
    | _ -> (yy243 [@tailcall]) yyrecord

and yy252 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy266 [@tailcall]) yyrecord
    | _ -> (yy243 [@tailcall]) yyrecord

and yy253 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy266 [@tailcall]) yyrecord
    | _ -> (yy243 [@tailcall]) yyrecord

and yy254 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy266 [@tailcall]) yyrecord
    | _ -> (yy243 [@tailcall]) yyrecord

and yy255 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy236 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy256 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yycursor <- yyrecord.yymarker;
  if (yyrecord.yyaccept == 0) then (yy237 [@tailcall]) yyrecord
  else (yy243 [@tailcall]) yyrecord

and yy257 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy267 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy258 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy268 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy269 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy259 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy267 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy260 (yyrecord : tokenizer_yyrecord) : unit =
  multiline_comment yyrecord 0; line_cont yyrecord

and yy261 (yyrecord : tokenizer_yyrecord) : unit =
  singleline_comment yyrecord

and yy262 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy234 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy263 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy236 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy234 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy264 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy236 [@tailcall]) yyrecord
    | '\x8B'..'\xA7'
    | '\xAA'..'\xAE'
    | '\xB0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy234 [@tailcall]) yyrecord
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy238 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy265 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9E'
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy234 [@tailcall]) yyrecord
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy236 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy266 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy262 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy267 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy236 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy268 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy236 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy269 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy236 [@tailcall]) yyrecord
    | _ -> (yy256 [@tailcall]) yyrecord

and yy270 (yyrecord : tokenizer_yyrecord) : unit =
  ()

and line_cont_body (yyrecord : tokenizer_yyrecord) : unit =
  (yy233 [@tailcall]) yyrecord



and line_cont yyrecord =
  yyrecord.yystart <- yyrecord.yycursor;
  line_cont_body yyrecord


let rec yy271 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\b'
    | '\x0E'..'\x1F'
    | '\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy299 [@tailcall]) yyrecord exp_hashlen
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy272 [@tailcall]) yyrecord exp_hashlen
      )
    | '\t'
    | ' '..'!'
    | '#'..'~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy273 [@tailcall]) yyrecord exp_hashlen
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy275 [@tailcall]) yyrecord exp_hashlen
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy277 [@tailcall]) yyrecord exp_hashlen
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy278 [@tailcall]) yyrecord exp_hashlen
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy281 [@tailcall]) yyrecord exp_hashlen
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy282 [@tailcall]) yyrecord exp_hashlen
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy283 [@tailcall]) yyrecord exp_hashlen
    | '\xE1'
    | '\xE3'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy284 [@tailcall]) yyrecord exp_hashlen
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy285 [@tailcall]) yyrecord exp_hashlen
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy286 [@tailcall]) yyrecord exp_hashlen
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy287 [@tailcall]) yyrecord exp_hashlen
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy288 [@tailcall]) yyrecord exp_hashlen
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy289 [@tailcall]) yyrecord exp_hashlen
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy290 [@tailcall]) yyrecord exp_hashlen
    | _ ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy279 [@tailcall]) yyrecord exp_hashlen

and yy272 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  error "Illegal character"

and yy273 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  (yy274 [@tailcall]) yyrecord exp_hashlen

and yy274 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  
    add_lexeme_substring yyrecord yyrecord.info.strbuf;
    raw_string yyrecord exp_hashlen


and yy275 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  (yy276 [@tailcall]) yyrecord exp_hashlen

and yy276 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  newline yyrecord; error "Unterminated raw string"

and yy277 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy275 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy276 [@tailcall]) yyrecord exp_hashlen

and yy278 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '#' ->
      yyrecord.yyt1 <- yyrecord.yycursor;
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy291 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy274 [@tailcall]) yyrecord exp_hashlen

and yy279 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  (yy280 [@tailcall]) yyrecord exp_hashlen

and yy280 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  malformed_utf8 ()

and yy281 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy273 [@tailcall]) yyrecord exp_hashlen
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy275 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy280 [@tailcall]) yyrecord exp_hashlen

and yy282 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy273 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy280 [@tailcall]) yyrecord exp_hashlen

and yy283 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy293 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy280 [@tailcall]) yyrecord exp_hashlen

and yy284 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy293 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy280 [@tailcall]) yyrecord exp_hashlen

and yy285 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy295 [@tailcall]) yyrecord exp_hashlen
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy296 [@tailcall]) yyrecord exp_hashlen
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy293 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy280 [@tailcall]) yyrecord exp_hashlen

and yy286 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy293 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy280 [@tailcall]) yyrecord exp_hashlen

and yy287 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy293 [@tailcall]) yyrecord exp_hashlen
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy297 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy280 [@tailcall]) yyrecord exp_hashlen

and yy288 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy298 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy280 [@tailcall]) yyrecord exp_hashlen

and yy289 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy298 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy280 [@tailcall]) yyrecord exp_hashlen

and yy290 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy298 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy280 [@tailcall]) yyrecord exp_hashlen

and yy291 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '#' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy291 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy292 [@tailcall]) yyrecord exp_hashlen

and yy292 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yytl0 <- yyrecord.yyt1;
  yyrecord.yytr0 <- yyrecord.yycursor;
  
    let hashlen = yyrecord.yytr0 - yyrecord.yytl0 in
    if check_hashlen ~exp:exp_hashlen hashlen then
      RAW_STRING (Buffer.contents yyrecord.info.strbuf)
    else begin
      Buffer.add_string yyrecord.info.strbuf (lexeme yyrecord);
      raw_string yyrecord exp_hashlen
    end


and yy293 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy273 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy294 [@tailcall]) yyrecord exp_hashlen

and yy294 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yycursor <- yyrecord.yymarker;
  (yy280 [@tailcall]) yyrecord exp_hashlen

and yy295 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8D'
    | '\x90'..'\xA7'
    | '\xAF'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy273 [@tailcall]) yyrecord exp_hashlen
    | '\x8E'..'\x8F'
    | '\xAA'..'\xAE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy272 [@tailcall]) yyrecord exp_hashlen
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy275 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy294 [@tailcall]) yyrecord exp_hashlen

and yy296 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xA5'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy273 [@tailcall]) yyrecord exp_hashlen
    | '\xA6'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy272 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy294 [@tailcall]) yyrecord exp_hashlen

and yy297 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy273 [@tailcall]) yyrecord exp_hashlen
    | '\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy272 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy294 [@tailcall]) yyrecord exp_hashlen

and yy298 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy293 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy294 [@tailcall]) yyrecord exp_hashlen

and yy299 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  error "Unterminated raw string"

and raw_string_body (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  (yy271 [@tailcall]) yyrecord exp_hashlen



and raw_string yyrecord exp_hashlen =
  yyrecord.yystart <- yyrecord.yycursor;
  raw_string_body yyrecord exp_hashlen


let rec yy300 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\b'
    | '\x0E'..'\x1F'
    | '\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy330 [@tailcall]) yyrecord exp_hashlen
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy301 [@tailcall]) yyrecord exp_hashlen
      )
    | '\t'
    | ' '..'!'
    | '#'..'~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy302 [@tailcall]) yyrecord exp_hashlen
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy304 [@tailcall]) yyrecord exp_hashlen
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy306 [@tailcall]) yyrecord exp_hashlen
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy307 [@tailcall]) yyrecord exp_hashlen
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy310 [@tailcall]) yyrecord exp_hashlen
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy311 [@tailcall]) yyrecord exp_hashlen
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy312 [@tailcall]) yyrecord exp_hashlen
    | '\xE1'
    | '\xE3'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy313 [@tailcall]) yyrecord exp_hashlen
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy314 [@tailcall]) yyrecord exp_hashlen
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy315 [@tailcall]) yyrecord exp_hashlen
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy316 [@tailcall]) yyrecord exp_hashlen
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy317 [@tailcall]) yyrecord exp_hashlen
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy318 [@tailcall]) yyrecord exp_hashlen
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy319 [@tailcall]) yyrecord exp_hashlen
    | _ ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy308 [@tailcall]) yyrecord exp_hashlen

and yy301 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  error "Illegal character"

and yy302 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  (yy303 [@tailcall]) yyrecord exp_hashlen

and yy303 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  
    add_lexeme_substring yyrecord yyrecord.info.strbuf;
    raw_string_multiline yyrecord exp_hashlen


and yy304 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  (yy305 [@tailcall]) yyrecord exp_hashlen

and yy305 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  
    newline yyrecord;
    (* Any newline is normalized to \n *)
    Buffer.add_char yyrecord.info.strbuf '\n';
    raw_string_multiline yyrecord exp_hashlen


and yy306 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy304 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy305 [@tailcall]) yyrecord exp_hashlen

and yy307 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy320 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy303 [@tailcall]) yyrecord exp_hashlen

and yy308 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  (yy309 [@tailcall]) yyrecord exp_hashlen

and yy309 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  malformed_utf8 ()

and yy310 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy302 [@tailcall]) yyrecord exp_hashlen
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy304 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy309 [@tailcall]) yyrecord exp_hashlen

and yy311 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy302 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy309 [@tailcall]) yyrecord exp_hashlen

and yy312 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy322 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy309 [@tailcall]) yyrecord exp_hashlen

and yy313 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy322 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy309 [@tailcall]) yyrecord exp_hashlen

and yy314 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy323 [@tailcall]) yyrecord exp_hashlen
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy324 [@tailcall]) yyrecord exp_hashlen
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy322 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy309 [@tailcall]) yyrecord exp_hashlen

and yy315 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy322 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy309 [@tailcall]) yyrecord exp_hashlen

and yy316 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy322 [@tailcall]) yyrecord exp_hashlen
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy325 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy309 [@tailcall]) yyrecord exp_hashlen

and yy317 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy326 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy309 [@tailcall]) yyrecord exp_hashlen

and yy318 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy326 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy309 [@tailcall]) yyrecord exp_hashlen

and yy319 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy326 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy309 [@tailcall]) yyrecord exp_hashlen

and yy320 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy327 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy321 [@tailcall]) yyrecord exp_hashlen

and yy321 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yycursor <- yyrecord.yymarker;
  if (yyrecord.yyaccept == 0) then (yy303 [@tailcall]) yyrecord exp_hashlen
  else (yy309 [@tailcall]) yyrecord exp_hashlen

and yy322 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy302 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy321 [@tailcall]) yyrecord exp_hashlen

and yy323 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8D'
    | '\x90'..'\xA7'
    | '\xAF'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy302 [@tailcall]) yyrecord exp_hashlen
    | '\x8E'..'\x8F'
    | '\xAA'..'\xAE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy301 [@tailcall]) yyrecord exp_hashlen
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy304 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy321 [@tailcall]) yyrecord exp_hashlen

and yy324 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xA5'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy302 [@tailcall]) yyrecord exp_hashlen
    | '\xA6'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy301 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy321 [@tailcall]) yyrecord exp_hashlen

and yy325 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy302 [@tailcall]) yyrecord exp_hashlen
    | '\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy301 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy321 [@tailcall]) yyrecord exp_hashlen

and yy326 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy322 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy321 [@tailcall]) yyrecord exp_hashlen

and yy327 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '#' ->
      yyrecord.yyt1 <- yyrecord.yycursor;
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy328 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy321 [@tailcall]) yyrecord exp_hashlen

and yy328 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '#' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy328 [@tailcall]) yyrecord exp_hashlen
    | _ -> (yy329 [@tailcall]) yyrecord exp_hashlen

and yy329 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  yyrecord.yytl0 <- yyrecord.yyt1;
  yyrecord.yytr0 <- yyrecord.yycursor;
  
    let hashlen = yyrecord.yytr0 - yyrecord.yytl0 in
    if check_hashlen ~exp:exp_hashlen hashlen then
      RAW_STRING (dedent (Buffer.contents yyrecord.info.strbuf))
    else begin
      Buffer.add_string yyrecord.info.strbuf (lexeme yyrecord);
      raw_string_multiline yyrecord exp_hashlen
    end


and yy330 (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  error "Unterminated multiline raw string"

and raw_string_multiline_body (yyrecord : tokenizer_yyrecord) (exp_hashlen : int) : token =
  (yy300 [@tailcall]) yyrecord exp_hashlen



and raw_string_multiline yyrecord exp_hashlen =
  yyrecord.yystart <- yyrecord.yycursor;
  raw_string_multiline_body yyrecord exp_hashlen


let rec yy331 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy334 [@tailcall]) yyrecord
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy336 [@tailcall]) yyrecord
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy338 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy339 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy340 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy341 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy342 [@tailcall]) yyrecord
    | _ ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy352 [@tailcall]) yyrecord
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy332 [@tailcall]) yyrecord
      )

and yy332 (yyrecord : tokenizer_yyrecord) : unit =
  (yy333 [@tailcall]) yyrecord

and yy333 (yyrecord : tokenizer_yyrecord) : unit =
  rollback yyrecord

and yy334 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy334 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy343 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy345 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy346 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy347 [@tailcall]) yyrecord
    | _ -> (yy335 [@tailcall]) yyrecord

and yy335 (yyrecord : tokenizer_yyrecord) : unit =
  whitespace_escape yyrecord

and yy336 (yyrecord : tokenizer_yyrecord) : unit =
  (yy337 [@tailcall]) yyrecord

and yy337 (yyrecord : tokenizer_yyrecord) : unit =
  newline yyrecord; whitespace_escape yyrecord

and yy338 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy336 [@tailcall]) yyrecord
    | _ -> (yy337 [@tailcall]) yyrecord

and yy339 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy336 [@tailcall]) yyrecord
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy334 [@tailcall]) yyrecord
    | _ -> (yy333 [@tailcall]) yyrecord

and yy340 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy348 [@tailcall]) yyrecord
    | _ -> (yy333 [@tailcall]) yyrecord

and yy341 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy349 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy350 [@tailcall]) yyrecord
    | _ -> (yy333 [@tailcall]) yyrecord

and yy342 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy348 [@tailcall]) yyrecord
    | _ -> (yy333 [@tailcall]) yyrecord

and yy343 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy334 [@tailcall]) yyrecord
    | _ -> (yy344 [@tailcall]) yyrecord

and yy344 (yyrecord : tokenizer_yyrecord) : unit =
  yyrecord.yycursor <- yyrecord.yymarker;
  if (yyrecord.yyaccept == 0) then (yy335 [@tailcall]) yyrecord
  else (yy333 [@tailcall]) yyrecord

and yy345 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy348 [@tailcall]) yyrecord
    | _ -> (yy344 [@tailcall]) yyrecord

and yy346 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy351 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy350 [@tailcall]) yyrecord
    | _ -> (yy344 [@tailcall]) yyrecord

and yy347 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy348 [@tailcall]) yyrecord
    | _ -> (yy344 [@tailcall]) yyrecord

and yy348 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy334 [@tailcall]) yyrecord
    | _ -> (yy344 [@tailcall]) yyrecord

and yy349 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy334 [@tailcall]) yyrecord
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy336 [@tailcall]) yyrecord
    | _ -> (yy344 [@tailcall]) yyrecord

and yy350 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy334 [@tailcall]) yyrecord
    | _ -> (yy344 [@tailcall]) yyrecord

and yy351 (yyrecord : tokenizer_yyrecord) : unit =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy334 [@tailcall]) yyrecord
    | _ -> (yy344 [@tailcall]) yyrecord

and yy352 (yyrecord : tokenizer_yyrecord) : unit =
  ()

and whitespace_escape_body (yyrecord : tokenizer_yyrecord) : unit =
  (yy331 [@tailcall]) yyrecord



and whitespace_escape yyrecord =
  yyrecord.yystart <- yyrecord.yycursor;
  whitespace_escape_body yyrecord


let rec yy353 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\b'
    | '\x0E'..'\x1F'
    | '\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy420 [@tailcall]) yyrecord
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy354 [@tailcall]) yyrecord
      )
    | '\t'
    | ' '..'!'
    | '#'..'['
    | ']'..'~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy355 [@tailcall]) yyrecord
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy357 [@tailcall]) yyrecord
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy359 [@tailcall]) yyrecord
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy360 [@tailcall]) yyrecord
    | '\\' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy361 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy364 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy365 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy366 [@tailcall]) yyrecord
    | '\xE1'
    | '\xE3'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy367 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy368 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy369 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy370 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy371 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy372 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy373 [@tailcall]) yyrecord
    | _ ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy362 [@tailcall]) yyrecord

and yy354 (yyrecord : tokenizer_yyrecord) : token =
  error "Illegal character"

and yy355 (yyrecord : tokenizer_yyrecord) : token =
  (yy356 [@tailcall]) yyrecord

and yy356 (yyrecord : tokenizer_yyrecord) : token =
  add_lexeme_substring yyrecord yyrecord.info.strbuf; string yyrecord

and yy357 (yyrecord : tokenizer_yyrecord) : token =
  (yy358 [@tailcall]) yyrecord

and yy358 (yyrecord : tokenizer_yyrecord) : token =
  newline yyrecord; error "Unterminated string"

and yy359 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy357 [@tailcall]) yyrecord
    | _ -> (yy358 [@tailcall]) yyrecord

and yy360 (yyrecord : tokenizer_yyrecord) : token =
  QUOTED_STRING (Buffer.contents yyrecord.info.strbuf)

and yy361 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\b'
    | '\x0E'..'\x1F'
    | '!'
    | '#'..'['
    | ']'..'a'
    | 'c'..'e'
    | 'g'..'m'
    | 'o'..'q'
    | 'v'..'\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy356 [@tailcall]) yyrecord
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy374 [@tailcall]) yyrecord
      )
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy376 [@tailcall]) yyrecord
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy378 [@tailcall]) yyrecord
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy380 [@tailcall]) yyrecord
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy381 [@tailcall]) yyrecord
    | '\\' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy382 [@tailcall]) yyrecord
    | 'b' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy383 [@tailcall]) yyrecord
    | 'f' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy384 [@tailcall]) yyrecord
    | 'n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy385 [@tailcall]) yyrecord
    | 'r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy386 [@tailcall]) yyrecord
    | 's' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy387 [@tailcall]) yyrecord
    | 't' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy388 [@tailcall]) yyrecord
    | 'u' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy389 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy390 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy392 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy393 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy394 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy395 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy396 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE'..'\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy397 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy398 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy399 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy400 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy401 [@tailcall]) yyrecord
    | _ -> (yy356 [@tailcall]) yyrecord

and yy362 (yyrecord : tokenizer_yyrecord) : token =
  (yy363 [@tailcall]) yyrecord

and yy363 (yyrecord : tokenizer_yyrecord) : token =
  malformed_utf8 ()

and yy364 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy355 [@tailcall]) yyrecord
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy357 [@tailcall]) yyrecord
    | _ -> (yy363 [@tailcall]) yyrecord

and yy365 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy355 [@tailcall]) yyrecord
    | _ -> (yy363 [@tailcall]) yyrecord

and yy366 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy402 [@tailcall]) yyrecord
    | _ -> (yy363 [@tailcall]) yyrecord

and yy367 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy402 [@tailcall]) yyrecord
    | _ -> (yy363 [@tailcall]) yyrecord

and yy368 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy403 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy404 [@tailcall]) yyrecord
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy402 [@tailcall]) yyrecord
    | _ -> (yy363 [@tailcall]) yyrecord

and yy369 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy402 [@tailcall]) yyrecord
    | _ -> (yy363 [@tailcall]) yyrecord

and yy370 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy402 [@tailcall]) yyrecord
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy405 [@tailcall]) yyrecord
    | _ -> (yy363 [@tailcall]) yyrecord

and yy371 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy406 [@tailcall]) yyrecord
    | _ -> (yy363 [@tailcall]) yyrecord

and yy372 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy406 [@tailcall]) yyrecord
    | _ -> (yy363 [@tailcall]) yyrecord

and yy373 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy406 [@tailcall]) yyrecord
    | _ -> (yy363 [@tailcall]) yyrecord

and yy374 (yyrecord : tokenizer_yyrecord) : token =
  (yy375 [@tailcall]) yyrecord

and yy375 (yyrecord : tokenizer_yyrecord) : token =
  error "Invalid escape sequence"

and yy376 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 2;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy376 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy407 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy408 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy409 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy410 [@tailcall]) yyrecord
    | _ -> (yy377 [@tailcall]) yyrecord

and yy377 (yyrecord : tokenizer_yyrecord) : token =
  whitespace_escape yyrecord; string yyrecord

and yy378 (yyrecord : tokenizer_yyrecord) : token =
  (yy379 [@tailcall]) yyrecord

and yy379 (yyrecord : tokenizer_yyrecord) : token =
  
    newline yyrecord;
    whitespace_escape yyrecord;
    string yyrecord


and yy380 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy378 [@tailcall]) yyrecord
    | _ -> (yy379 [@tailcall]) yyrecord

and yy381 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.add_char yyrecord.info.strbuf '"'; string yyrecord

and yy382 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.add_char yyrecord.info.strbuf '\\'; string yyrecord

and yy383 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.add_char yyrecord.info.strbuf '\b'; string yyrecord

and yy384 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.add_char yyrecord.info.strbuf '\012'; string yyrecord

and yy385 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.add_char yyrecord.info.strbuf '\n'; string yyrecord

and yy386 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.add_char yyrecord.info.strbuf '\r'; string yyrecord

and yy387 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.add_char yyrecord.info.strbuf ' '; string yyrecord

and yy388 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.add_char yyrecord.info.strbuf '\t'; string yyrecord

and yy389 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 3;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '{' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy411 [@tailcall]) yyrecord
    | _ -> (yy375 [@tailcall]) yyrecord

and yy390 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\x9F'
    | '\xA1'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy374 [@tailcall]) yyrecord
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy378 [@tailcall]) yyrecord
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy376 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy391 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yycursor <- yyrecord.yymarker;
  match yyrecord.yyaccept with
    | 0 -> (yy356 [@tailcall]) yyrecord
    | 1 -> (yy363 [@tailcall]) yyrecord
    | 2 -> (yy377 [@tailcall]) yyrecord
    | _ -> (yy375 [@tailcall]) yyrecord

and yy392 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy374 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy393 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy392 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy394 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x99'
    | '\x9B'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy392 [@tailcall]) yyrecord
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy412 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy395 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy413 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy414 [@tailcall]) yyrecord
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy392 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy396 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy412 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy392 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy397 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy392 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy398 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy392 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy399 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy397 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy400 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy397 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy401 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy397 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy402 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy355 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy403 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8D'
    | '\x90'..'\xA7'
    | '\xAF'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy355 [@tailcall]) yyrecord
    | '\x8E'..'\x8F'
    | '\xAA'..'\xAE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy354 [@tailcall]) yyrecord
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy357 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy404 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xA5'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy355 [@tailcall]) yyrecord
    | '\xA6'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy354 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy405 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy355 [@tailcall]) yyrecord
    | '\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy354 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy406 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy402 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy407 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy376 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy408 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy415 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy409 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy416 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy417 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy410 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy415 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy411 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '0'..'9'
    | 'A'..'F'
    | 'a'..'f' ->
      yyrecord.yyt1 <- yyrecord.yycursor;
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy418 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy412 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy376 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy374 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy413 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy376 [@tailcall]) yyrecord
    | '\x8B'..'\xA7'
    | '\xAA'..'\xAE'
    | '\xB0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy374 [@tailcall]) yyrecord
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy378 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy414 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9E'
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy374 [@tailcall]) yyrecord
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy376 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy415 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy376 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy416 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy376 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy417 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy376 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy418 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '0'..'9'
    | 'A'..'F'
    | 'a'..'f' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy418 [@tailcall]) yyrecord
    | '}' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy419 [@tailcall]) yyrecord
    | _ -> (yy391 [@tailcall]) yyrecord

and yy419 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yytl0 <- yyrecord.yyt1;
  yyrecord.yytr0 <- yyrecord.yycursor;
  yyrecord.yytr0 <- yyrecord.yytr0 - 1;
  
    let uchar = resolve_unicode_escape yyrecord in
    Buffer.add_utf_8_uchar yyrecord.info.strbuf uchar;
    string yyrecord


and yy420 (yyrecord : tokenizer_yyrecord) : token =
  error "Unterminated string"

and string_body (yyrecord : tokenizer_yyrecord) : token =
  (yy353 [@tailcall]) yyrecord



and string yyrecord =
  yyrecord.yystart <- yyrecord.yycursor;
  string_body yyrecord


let rec yy421 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\b'
    | '\x0E'..'\x1F'
    | '\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy467 [@tailcall]) yyrecord
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy422 [@tailcall]) yyrecord
      )
    | '\t'
    | ' '..'!'
    | '#'..'['
    | ']'..'~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy423 [@tailcall]) yyrecord
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy425 [@tailcall]) yyrecord
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy427 [@tailcall]) yyrecord
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy428 [@tailcall]) yyrecord
    | '\\' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy429 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy432 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy433 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy434 [@tailcall]) yyrecord
    | '\xE1'
    | '\xE3'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy435 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy436 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy437 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy438 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy439 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy440 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy441 [@tailcall]) yyrecord
    | _ ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy430 [@tailcall]) yyrecord

and yy422 (yyrecord : tokenizer_yyrecord) : token =
  error "Illegal character"

and yy423 (yyrecord : tokenizer_yyrecord) : token =
  (yy424 [@tailcall]) yyrecord

and yy424 (yyrecord : tokenizer_yyrecord) : token =
  
    add_lexeme_substring yyrecord yyrecord.info.strbuf;
    string_multiline yyrecord


and yy425 (yyrecord : tokenizer_yyrecord) : token =
  (yy426 [@tailcall]) yyrecord

and yy426 (yyrecord : tokenizer_yyrecord) : token =
  
    newline yyrecord;
    (* Any newline is normalized to \n *)
    Buffer.add_char yyrecord.info.strbuf '\n';
    string_multiline yyrecord


and yy427 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy425 [@tailcall]) yyrecord
    | _ -> (yy426 [@tailcall]) yyrecord

and yy428 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy442 [@tailcall]) yyrecord
    | _ -> (yy424 [@tailcall]) yyrecord

and yy429 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy444 [@tailcall]) yyrecord
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy446 [@tailcall]) yyrecord
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy448 [@tailcall]) yyrecord
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy449 [@tailcall]) yyrecord
    | '\\' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy450 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy451 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy452 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy453 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy454 [@tailcall]) yyrecord
    | _ -> (yy424 [@tailcall]) yyrecord

and yy430 (yyrecord : tokenizer_yyrecord) : token =
  (yy431 [@tailcall]) yyrecord

and yy431 (yyrecord : tokenizer_yyrecord) : token =
  malformed_utf8 ()

and yy432 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy423 [@tailcall]) yyrecord
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy425 [@tailcall]) yyrecord
    | _ -> (yy431 [@tailcall]) yyrecord

and yy433 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy423 [@tailcall]) yyrecord
    | _ -> (yy431 [@tailcall]) yyrecord

and yy434 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy455 [@tailcall]) yyrecord
    | _ -> (yy431 [@tailcall]) yyrecord

and yy435 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy455 [@tailcall]) yyrecord
    | _ -> (yy431 [@tailcall]) yyrecord

and yy436 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy456 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy457 [@tailcall]) yyrecord
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy455 [@tailcall]) yyrecord
    | _ -> (yy431 [@tailcall]) yyrecord

and yy437 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy455 [@tailcall]) yyrecord
    | _ -> (yy431 [@tailcall]) yyrecord

and yy438 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy455 [@tailcall]) yyrecord
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy458 [@tailcall]) yyrecord
    | _ -> (yy431 [@tailcall]) yyrecord

and yy439 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy459 [@tailcall]) yyrecord
    | _ -> (yy431 [@tailcall]) yyrecord

and yy440 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy459 [@tailcall]) yyrecord
    | _ -> (yy431 [@tailcall]) yyrecord

and yy441 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy459 [@tailcall]) yyrecord
    | _ -> (yy431 [@tailcall]) yyrecord

and yy442 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy460 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy443 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yycursor <- yyrecord.yymarker;
  match yyrecord.yyaccept with
    | 0 -> (yy424 [@tailcall]) yyrecord
    | 1 -> (yy431 [@tailcall]) yyrecord
    | _ -> (yy445 [@tailcall]) yyrecord

and yy444 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 2;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy444 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy461 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy452 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy462 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy454 [@tailcall]) yyrecord
    | _ -> (yy445 [@tailcall]) yyrecord

and yy445 (yyrecord : tokenizer_yyrecord) : token =
  whitespace_escape yyrecord; string_multiline yyrecord

and yy446 (yyrecord : tokenizer_yyrecord) : token =
  (yy447 [@tailcall]) yyrecord

and yy447 (yyrecord : tokenizer_yyrecord) : token =
  
    newline yyrecord;
    whitespace_escape yyrecord;
    string_multiline yyrecord


and yy448 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy446 [@tailcall]) yyrecord
    | _ -> (yy447 [@tailcall]) yyrecord

and yy449 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.add_string yyrecord.info.strbuf "\\\""; string_multiline yyrecord

and yy450 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.add_string yyrecord.info.strbuf "\\\\"; string_multiline yyrecord

and yy451 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy446 [@tailcall]) yyrecord
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy444 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy452 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy463 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy453 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy464 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy465 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy454 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy463 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy455 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy423 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy456 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8D'
    | '\x90'..'\xA7'
    | '\xAF'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy423 [@tailcall]) yyrecord
    | '\x8E'..'\x8F'
    | '\xAA'..'\xAE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy422 [@tailcall]) yyrecord
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy425 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy457 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xA5'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy423 [@tailcall]) yyrecord
    | '\xA6'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy422 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy458 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy423 [@tailcall]) yyrecord
    | '\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy422 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy459 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy455 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy460 (yyrecord : tokenizer_yyrecord) : token =
  
    QUOTED_STRING (resolve_escapes (dedent (Buffer.contents yyrecord.info.strbuf)))


and yy461 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy444 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy462 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy466 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy465 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy463 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy444 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy464 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy444 [@tailcall]) yyrecord
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy446 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy465 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy444 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy466 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy444 [@tailcall]) yyrecord
    | _ -> (yy443 [@tailcall]) yyrecord

and yy467 (yyrecord : tokenizer_yyrecord) : token =
  error "Unterminated multiline string"

and string_multiline_body (yyrecord : tokenizer_yyrecord) : token =
  (yy421 [@tailcall]) yyrecord



and string_multiline yyrecord =
  yyrecord.yystart <- yyrecord.yycursor;
  string_multiline_body yyrecord


let rec yy468 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00'
    | '\x01'..'\b'
    | '\x0E'..'\x1F'
    | '['
    | ']'
    | '\x7F' ->
      if (yyrecord.yylimit <= yyrecord.yycursor) then (
        (yy616 [@tailcall]) yyrecord
      ) else (
        yyrecord.yycursor <- yyrecord.yycursor + 1;
        (yy469 [@tailcall]) yyrecord
      )
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy471 [@tailcall]) yyrecord
    | '\n'..'\x0C' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy473 [@tailcall]) yyrecord
    | '\r' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy475 [@tailcall]) yyrecord
    | '!'
    | '$'..'\''
    | '*'
    | ','
    | ':'
    | '<'
    | '>'..'Z'
    | '^'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy479 [@tailcall]) yyrecord
    | '#' ->
      yyrecord.yyt1 <- yyrecord.yycursor;
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy481 [@tailcall]) yyrecord
    | '(' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy482 [@tailcall]) yyrecord
    | ')' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy483 [@tailcall]) yyrecord
    | '+'
    | '-' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy484 [@tailcall]) yyrecord
    | '.' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy485 [@tailcall]) yyrecord
    | '/' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy486 [@tailcall]) yyrecord
    | '0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy487 [@tailcall]) yyrecord
    | '1'..'9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy489 [@tailcall]) yyrecord
    | ';' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy490 [@tailcall]) yyrecord
    | '=' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy491 [@tailcall]) yyrecord
    | '\\' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy492 [@tailcall]) yyrecord
    | '{' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy493 [@tailcall]) yyrecord
    | '}' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy494 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy497 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy498 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy499 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy500 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy501 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy502 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy503 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy504 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy505 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy506 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy507 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy508 [@tailcall]) yyrecord
    | _ ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy495 [@tailcall]) yyrecord

and yy469 (yyrecord : tokenizer_yyrecord) : token =
  (yy470 [@tailcall]) yyrecord

and yy470 (yyrecord : tokenizer_yyrecord) : token =
  error "Illegal character"

and yy471 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 0;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\t'
    | ' ' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy471 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy509 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy511 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy512 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy513 [@tailcall]) yyrecord
    | _ -> (yy472 [@tailcall]) yyrecord

and yy472 (yyrecord : tokenizer_yyrecord) : token =
  main yyrecord

and yy473 (yyrecord : tokenizer_yyrecord) : token =
  (yy474 [@tailcall]) yyrecord

and yy474 (yyrecord : tokenizer_yyrecord) : token =
  newline yyrecord; NEWLINE

and yy475 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\n' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy473 [@tailcall]) yyrecord
    | _ -> (yy474 [@tailcall]) yyrecord

and yy476 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  (yy477 [@tailcall]) yyrecord yych

and yy477 (yyrecord : tokenizer_yyrecord) (yych : char) : token =
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | '0'..':'
    | '<'
    | '>'..'Z'
    | '^'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy514 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy516 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy517 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy518 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy519 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy520 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy521 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy522 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy523 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy524 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy525 [@tailcall]) yyrecord
    | _ -> (yy478 [@tailcall]) yyrecord

and yy478 (yyrecord : tokenizer_yyrecord) : token =
  
    IDENT_STRING (lexeme yyrecord)


and yy479 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 2;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy526 [@tailcall]) yyrecord
    | _ -> (yy480 [@tailcall]) yyrecord

and yy480 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.reset yyrecord.info.strbuf; string yyrecord

and yy481 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 3;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | '0'..':'
    | '<'
    | '>'..'Z'
    | '^'..'z'
    | '|'
    | '~'
    | '\xC2'..'\xF4' -> (yy528 [@tailcall]) yyrecord yych
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy530 [@tailcall]) yyrecord
    | '#' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy532 [@tailcall]) yyrecord
    | _ -> (yy470 [@tailcall]) yyrecord

and yy482 (yyrecord : tokenizer_yyrecord) : token =
  LPAREN

and yy483 (yyrecord : tokenizer_yyrecord) : token =
  RPAREN

and yy484 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy478 [@tailcall]) yyrecord
    | '.' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy485 [@tailcall]) yyrecord
    | '0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy487 [@tailcall]) yyrecord
    | '1'..'9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy489 [@tailcall]) yyrecord
    | _ -> (yy477 [@tailcall]) yyrecord yych

and yy485 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 1;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy478 [@tailcall]) yyrecord
    | '0'..'9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy545 [@tailcall]) yyrecord
    | _ -> (yy477 [@tailcall]) yyrecord yych

and yy486 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '*' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy547 [@tailcall]) yyrecord
    | '-' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy548 [@tailcall]) yyrecord
    | '/' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy549 [@tailcall]) yyrecord
    | _ -> (yy470 [@tailcall]) yyrecord

and yy487 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 4;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'-'
    | ':'
    | '<'
    | '>'..'D'
    | 'F'..'Z'
    | '^'
    | '`'..'a'
    | 'c'..'d'
    | 'f'..'n'
    | 'p'..'w'
    | 'y'..'z'
    | '|'
    | '~'
    | '\xC2'..'\xF4' -> (yy551 [@tailcall]) yyrecord yych
    | '.' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy553 [@tailcall]) yyrecord
    | '0'..'9'
    | '_' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy489 [@tailcall]) yyrecord
    | 'E'
    | 'e' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy554 [@tailcall]) yyrecord
    | 'b' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy555 [@tailcall]) yyrecord
    | 'o' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy556 [@tailcall]) yyrecord
    | 'x' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy557 [@tailcall]) yyrecord
    | _ -> (yy488 [@tailcall]) yyrecord

and yy488 (yyrecord : tokenizer_yyrecord) : token =
  INTEGER (lexeme yyrecord)

and yy489 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 4;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'-'
    | ':'
    | '<'
    | '>'..'D'
    | 'F'..'Z'
    | '^'
    | '`'..'d'
    | 'f'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | '.' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy553 [@tailcall]) yyrecord
    | '0'..'9'
    | '_' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy489 [@tailcall]) yyrecord
    | 'E'
    | 'e' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy554 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy558 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy560 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy561 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy562 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy563 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy564 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy565 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy566 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy567 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy568 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy569 [@tailcall]) yyrecord
    | _ -> (yy488 [@tailcall]) yyrecord

and yy490 (yyrecord : tokenizer_yyrecord) : token =
  SEMI

and yy491 (yyrecord : tokenizer_yyrecord) : token =
  EQ

and yy492 (yyrecord : tokenizer_yyrecord) : token =
  line_cont yyrecord; main yyrecord

and yy493 (yyrecord : tokenizer_yyrecord) : token =
  LBRACE

and yy494 (yyrecord : tokenizer_yyrecord) : token =
  RBRACE

and yy495 (yyrecord : tokenizer_yyrecord) : token =
  (yy496 [@tailcall]) yyrecord

and yy496 (yyrecord : tokenizer_yyrecord) : token =
  malformed_utf8 ()

and yy497 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\x9F'
    | '\xA1'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | '\x85' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy473 [@tailcall]) yyrecord
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy471 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy498 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy499 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 5;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy500 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 5;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x99'
    | '\x9B'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy570 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy501 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 5;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy571 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy572 [@tailcall]) yyrecord
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy502 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 5;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy570 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy503 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 5;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy504 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 5;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy505 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 5;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy573 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy506 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 5;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy520 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy507 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 5;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy520 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy508 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 5;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy520 [@tailcall]) yyrecord
    | _ -> (yy496 [@tailcall]) yyrecord

and yy509 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy471 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy510 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yycursor <- yyrecord.yymarker;
  match yyrecord.yyaccept with
    | 0 -> (yy472 [@tailcall]) yyrecord
    | 1 -> (yy478 [@tailcall]) yyrecord
    | 2 -> (yy480 [@tailcall]) yyrecord
    | 3 -> (yy470 [@tailcall]) yyrecord
    | 4 -> (yy488 [@tailcall]) yyrecord
    | 5 -> (yy496 [@tailcall]) yyrecord
    | 6 -> (yy529 [@tailcall]) yyrecord
    | 7 -> (yy531 [@tailcall]) yyrecord
    | 8 -> (yy546 [@tailcall]) yyrecord
    | 9 -> (yy552 [@tailcall]) yyrecord
    | _ -> (yy600 [@tailcall]) yyrecord

and yy511 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy574 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy512 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy575 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy576 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy513 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy574 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy514 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\x9F'
    | '\xA1'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy515 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy516 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy517 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x99'
    | '\x9B'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy577 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy518 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy578 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy579 [@tailcall]) yyrecord
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy519 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy577 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy520 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy521 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy522 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy515 [@tailcall]) yyrecord
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy580 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy523 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy520 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy524 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy520 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy525 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy520 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy526 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy581 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy527 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 6;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  (yy528 [@tailcall]) yyrecord yych

and yy528 (yyrecord : tokenizer_yyrecord) (yych : char) : token =
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | '0'..':'
    | '<'
    | '>'..'Z'
    | '^'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy527 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy533 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy534 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy535 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy536 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy537 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy538 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy539 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy540 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy541 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy542 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy543 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy544 [@tailcall]) yyrecord
    | _ -> (yy529 [@tailcall]) yyrecord

and yy529 (yyrecord : tokenizer_yyrecord) : token =
  
    begin match lexeme yyrecord with
    | "#true" -> TRUE
    | "#false" -> FALSE
    | "#null" -> NULL
    | "#inf" -> FLOAT "inf"
    | "#-inf" -> FLOAT "-inf"
    | "#nan" -> FLOAT "nan"
    | k -> error ("Unknown keyword " ^ k)
    end


and yy530 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 7;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy582 [@tailcall]) yyrecord
    | _ -> (yy531 [@tailcall]) yyrecord

and yy531 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yytl0 <- yyrecord.yyt1;
  yyrecord.yytr0 <- yyrecord.yycursor;
  yyrecord.yytr0 <- yyrecord.yytr0 - 1;
  
    let hashlen = yyrecord.yytr0 - yyrecord.yytl0 in
    Buffer.reset yyrecord.info.strbuf;
    raw_string yyrecord hashlen


and yy532 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy530 [@tailcall]) yyrecord
    | '#' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy532 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy533 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\x9F'
    | '\xA1'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy527 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy534 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy527 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy535 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy534 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy536 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x99'
    | '\x9B'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy534 [@tailcall]) yyrecord
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy583 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy537 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy584 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy585 [@tailcall]) yyrecord
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy534 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy538 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy583 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy534 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy539 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy534 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy540 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy534 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy541 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy534 [@tailcall]) yyrecord
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy586 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy542 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy539 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy543 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy539 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy544 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy539 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy545 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 8;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | '0'..':'
    | '<'
    | '>'..'Z'
    | '^'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy545 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy587 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy588 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy589 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy590 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy591 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy592 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy593 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy594 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy595 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy596 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy597 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy598 [@tailcall]) yyrecord
    | _ -> (yy546 [@tailcall]) yyrecord

and yy546 (yyrecord : tokenizer_yyrecord) : token =
  
    error "Number-like identifiers are invalid and must be quoted"


and yy547 (yyrecord : tokenizer_yyrecord) : token =
  multiline_comment yyrecord 0; main yyrecord

and yy548 (yyrecord : tokenizer_yyrecord) : token =
  SLASHDASH

and yy549 (yyrecord : tokenizer_yyrecord) : token =
  singleline_comment yyrecord; NEWLINE

and yy550 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 9;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  (yy551 [@tailcall]) yyrecord yych

and yy551 (yyrecord : tokenizer_yyrecord) (yych : char) : token =
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | '0'..':'
    | '<'
    | '>'..'Z'
    | '^'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy558 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy560 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy561 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy562 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy563 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy564 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy565 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy566 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy567 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy568 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy569 [@tailcall]) yyrecord
    | _ -> (yy552 [@tailcall]) yyrecord

and yy552 (yyrecord : tokenizer_yyrecord) : token =
  
    error @@ sprintf "Invalid number literal %s" (lexeme yyrecord)


and yy553 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 9;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy552 [@tailcall]) yyrecord
    | '0'..'9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy599 [@tailcall]) yyrecord
    | _ -> (yy551 [@tailcall]) yyrecord yych

and yy554 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 9;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy552 [@tailcall]) yyrecord
    | '+'
    | '-' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy601 [@tailcall]) yyrecord
    | '0'..'9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy602 [@tailcall]) yyrecord
    | _ -> (yy551 [@tailcall]) yyrecord yych

and yy555 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 9;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy552 [@tailcall]) yyrecord
    | '0'..'1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy603 [@tailcall]) yyrecord
    | _ -> (yy551 [@tailcall]) yyrecord yych

and yy556 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 9;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy552 [@tailcall]) yyrecord
    | '0'..'7' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy604 [@tailcall]) yyrecord
    | _ -> (yy551 [@tailcall]) yyrecord yych

and yy557 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 9;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy552 [@tailcall]) yyrecord
    | '0'..'9'
    | 'A'..'F'
    | 'a'..'f' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy605 [@tailcall]) yyrecord
    | _ -> (yy551 [@tailcall]) yyrecord yych

and yy558 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\x9F'
    | '\xA1'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy559 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy560 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy561 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x99'
    | '\x9B'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy606 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy562 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy607 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy608 [@tailcall]) yyrecord
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy563 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy606 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy564 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy565 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy566 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy609 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy567 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy564 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy568 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy564 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy569 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy564 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy570 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy471 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy571 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy471 [@tailcall]) yyrecord
    | '\x8B'..'\x8D'
    | '\x90'..'\xA7'
    | '\xB0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | '\x8E'..'\x8F'
    | '\xAA'..'\xAE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy469 [@tailcall]) yyrecord
    | '\xA8'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy473 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy572 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9E'
    | '\xA0'..'\xA5'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy471 [@tailcall]) yyrecord
    | '\xA6'..'\xA9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy469 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy573 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | '\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy610 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy574 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy471 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy575 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8A'
    | '\xAF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy471 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy576 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy471 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy577 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy578 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x8B'..'\x8D'
    | '\x90'..'\xA7'
    | '\xB0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy579 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9E'
    | '\xA0'..'\xA5'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy580 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy476 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy581 (yyrecord : tokenizer_yyrecord) : token =
  Buffer.reset yyrecord.info.strbuf; string_multiline yyrecord

and yy582 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '"' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy611 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy583 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy527 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy584 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x8B'..'\x8D'
    | '\x90'..'\xA7'
    | '\xB0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy527 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy585 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9E'
    | '\xA0'..'\xA5'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy527 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy586 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy527 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy587 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x84'
    | '\x86'..'\x9F'
    | '\xA1'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy545 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy588 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy545 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy589 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\xA0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy588 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy590 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x99'
    | '\x9B'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy588 [@tailcall]) yyrecord
    | '\x9A' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy612 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy591 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy613 [@tailcall]) yyrecord
    | '\x81' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy614 [@tailcall]) yyrecord
    | '\x82'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy588 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy592 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy612 [@tailcall]) yyrecord
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy588 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy593 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy588 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy594 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy588 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy595 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBA'
    | '\xBC'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy588 [@tailcall]) yyrecord
    | '\xBB' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy615 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy596 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x90'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy593 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy597 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy593 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy598 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x8F' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy593 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy599 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 10;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | ':'
    | '<'
    | '>'..'D'
    | 'F'..'Z'
    | '^'
    | '`'..'d'
    | 'f'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | '0'..'9'
    | '_' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy599 [@tailcall]) yyrecord
    | 'E'
    | 'e' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy554 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy558 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy560 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy561 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy562 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy563 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy564 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy565 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy566 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy567 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy568 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy569 [@tailcall]) yyrecord
    | _ -> (yy600 [@tailcall]) yyrecord

and yy600 (yyrecord : tokenizer_yyrecord) : token =
  FLOAT (lexeme yyrecord)

and yy601 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 9;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x00' -> (yy552 [@tailcall]) yyrecord
    | '0'..'9' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy602 [@tailcall]) yyrecord
    | _ -> (yy551 [@tailcall]) yyrecord yych

and yy602 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 10;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | ':'
    | '<'
    | '>'..'Z'
    | '^'
    | '`'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | '0'..'9'
    | '_' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy602 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy558 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy560 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy561 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy562 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy563 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy564 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy565 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy566 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy567 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy568 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy569 [@tailcall]) yyrecord
    | _ -> (yy600 [@tailcall]) yyrecord

and yy603 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 4;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | '2'..':'
    | '<'
    | '>'..'Z'
    | '^'
    | '`'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | '0'..'1'
    | '_' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy603 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy558 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy560 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy561 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy562 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy563 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy564 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy565 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy566 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy567 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy568 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy569 [@tailcall]) yyrecord
    | _ -> (yy488 [@tailcall]) yyrecord

and yy604 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 4;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | '8'..':'
    | '<'
    | '>'..'Z'
    | '^'
    | '`'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | '0'..'7'
    | '_' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy604 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy558 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy560 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy561 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy562 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy563 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy564 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy565 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy566 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy567 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy568 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy569 [@tailcall]) yyrecord
    | _ -> (yy488 [@tailcall]) yyrecord

and yy605 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yyaccept <- 4;
  yyrecord.yymarker <- yyrecord.yycursor;
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '!'
    | '$'..'\''
    | '*'..'.'
    | ':'
    | '<'
    | '>'..'@'
    | 'G'..'Z'
    | '^'
    | '`'
    | 'g'..'z'
    | '|'
    | '~' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | '0'..'9'
    | 'A'..'F'
    | '_'
    | 'a'..'f' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy605 [@tailcall]) yyrecord
    | '\xC2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy558 [@tailcall]) yyrecord
    | '\xC3'..'\xDF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy559 [@tailcall]) yyrecord
    | '\xE0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy560 [@tailcall]) yyrecord
    | '\xE1' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy561 [@tailcall]) yyrecord
    | '\xE2' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy562 [@tailcall]) yyrecord
    | '\xE3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy563 [@tailcall]) yyrecord
    | '\xE4'..'\xEC'
    | '\xEE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy564 [@tailcall]) yyrecord
    | '\xED' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy565 [@tailcall]) yyrecord
    | '\xEF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy566 [@tailcall]) yyrecord
    | '\xF0' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy567 [@tailcall]) yyrecord
    | '\xF1'..'\xF3' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy568 [@tailcall]) yyrecord
    | '\xF4' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy569 [@tailcall]) yyrecord
    | _ -> (yy488 [@tailcall]) yyrecord

and yy606 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy607 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x8B'..'\x8D'
    | '\x90'..'\xA7'
    | '\xB0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy608 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9E'
    | '\xA0'..'\xA5'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy609 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy550 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy610 (yyrecord : tokenizer_yyrecord) : token =
  BOM

and yy611 (yyrecord : tokenizer_yyrecord) : token =
  yyrecord.yytl0 <- yyrecord.yyt1;
  yyrecord.yytr0 <- yyrecord.yycursor;
  yyrecord.yytr0 <- yyrecord.yytr0 - 3;
  
    let hashlen = yyrecord.yytr0 - yyrecord.yytl0 in
    Buffer.reset yyrecord.info.strbuf;
    raw_string_multiline yyrecord hashlen


and yy612 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x81'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy545 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy613 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x8B'..'\x8D'
    | '\x90'..'\xA7'
    | '\xB0'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy545 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy614 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\x9E'
    | '\xA0'..'\xA5'
    | '\xAA'..'\xBF' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy545 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy615 (yyrecord : tokenizer_yyrecord) : token =
  let yych = get yyrecord.yyinput yyrecord.yycursor in
  match yych with
    | '\x80'..'\xBE' ->
      yyrecord.yycursor <- yyrecord.yycursor + 1;
      (yy545 [@tailcall]) yyrecord
    | _ -> (yy510 [@tailcall]) yyrecord

and yy616 (yyrecord : tokenizer_yyrecord) : token =
  EOF

and main_body (yyrecord : tokenizer_yyrecord) : token =
  (yy468 [@tailcall]) yyrecord



and main (yyrecord : tokenizer_yyrecord) =
  save_position yyrecord;
  yyrecord.yystart <- yyrecord.yycursor;
  main_body yyrecord

let main_tokenizer yyrecord =
  let lexer () =
    let token = main yyrecord in
    let start_pos, end_pos = get_location yyrecord in
    token, start_pos, end_pos
  in
  lexer
